{"version":3,"sources":["components/Footer.js","components/About.js","components/Button.js","components/Header.js","components/Task.js","components/Tasks.js","components/AddTask.js","App.js","reportWebVitals.js","index.js"],"names":["footer","className","to","About","Button","color","text","onClick","style","backgroundColor","defaultProps","Header","title","onAdd","showAdd","location","useLocation","pathname","Task","task","onDelete","onToggle","reminder","onDoubleClick","id","cursor","day","Tasks","tasks","map","AddTask","useState","setText","setDay","setReminder","onSubmit","e","preventDefault","alert","htmlFor","type","placeholder","value","onChange","target","checked","currentTarget","App","showAddTask","setShowAddTask","setTasks","useEffect","getTasks","a","fetchTasks","tasksFromServer","fetch","res","json","data","fetchTask","addTask","method","headers","body","JSON","stringify","deleteTask","filter","toggleReminder","taskToToggle","updTask","path","exact","render","props","length","component","Footer","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.047342ff.chunk.js","sourcesContent":["// link from react allows the page to load faster by not refreshing the page\"\nimport { Link } from \"react-router-dom\"\n\nconst footer = () => {\n    return (\n        <footer className=\"\">\n            <p>Copyright &copy; 2021</p>\n            <Link to=\"/about\">About</Link>\n        </footer>\n    )\n}\n\nexport default footer\n","// link from react allows the page to load faster by not refreshing the page\"\nimport { Link } from \"react-router-dom\"\n\nconst About = () => {\n    return (\n        <div>\n            <h4>Version 1.0.0</h4>\n            <Link to=\"/\">Go back</Link>\n        </div>\n    )\n}\n\nexport default About\n","import PropTypes from \"prop-types\"\n\nconst Button = ({ color, text, onClick }) => {\n    return (\n        <button style={{ backgroundColor: color }} className=\"btn\" onClick={onClick}>\n            {text}\n        </button>\n    )\n}\n\nButton.defaultProps = {\n    color: \"steelblue\"\n}\n\nButton.propTypes = {\n    text: PropTypes.string,\n    color: PropTypes.string\n}\n\nexport default Button\n","import PropTypes from \"prop-types\"\nimport { useLocation } from \"react-router\"\nimport Button from \"./Button\"\n\nconst Header = ({ title, onAdd, showAdd }) => {\n    const location = useLocation()\n\n    return (\n        <header className=\"header\">\n            <h1>{title}</h1>\n            {/* This line allows to see on which root we are currently on */}\n            {location.pathname === \"/\" && (\n            <Button color={showAdd ? \"red\" : \"black\"} text={showAdd ? \"Close\" : \"Add\"} onClick={onAdd} />\n            )}\n        </header>\n    )\n}\n\nHeader.defaultProps = {\n    title: \"Task Manager\",\n}\n\nHeader.propTypes = {\n    title: PropTypes.string.isRequired,\n}\n\nexport default Header\n","import { FaTimes } from \"react-icons/fa\"\n\nconst Task = ({ task, onDelete, onToggle }) => {\n    return (\n        <div className={`task ${task.reminder ? \"reminder\" : \"\"}`} onDoubleClick={() => onToggle(task.id)}>\n            <h3>{task.text} <FaTimes style={{ color: \"red\", cursor: \"pointer\"}} onClick={() => onDelete(task.id)}/></h3>\n            <p>{task.day}</p>\n        </div>\n    )\n}\n\nexport default Task\n","import Task from \"./Task\"\n\nconst Tasks = ({ tasks, onDelete, onToggle }) => {\n    return (\n        <>\n            {tasks.map((task) => (\n            <Task \n                key={task.id} \n                task={task} \n                onDelete={onDelete} \n                onToggle={onToggle} \n            />\n        ))}\n        </>\n    )\n}\n\nexport default Tasks\n","import { useState } from \"react\";\n\nconst AddTask = ({ onAdd }) => {\n    const [text, setText] = useState(\"\")\n    const [day, setDay] = useState(\"\")\n    const [reminder, setReminder] = useState(\"false\")\n\n    const onSubmit = (e) => {\n        e.preventDefault()\n\n        if(!text) {\n            alert('Please add a task')\n            return\n        }\n\n        onAdd({ text, day, reminder })\n\n        setText(\"\")\n        setDay(\"\")\n        setReminder(false)\n    }\n\n    return (\n        <form className=\"add-form\" onSubmit={onSubmit}>\n            <div className=\"form-control\">\n                <label htmlFor=\"\">Task</label>\n                <input type=\"text\" placeholder=\"Add Task\" value={text} onChange={(e) => setText(e.target.value)}/>\n            </div>\n            <div className=\"form-control\">\n                <label htmlFor=\"\">Day & Time</label>\n                <input type=\"text\" placeholder=\"Add Day & Time\" value={day} onChange={(e) => setDay(e.target.value)} />\n            </div>\n            <div className=\"form-control form-control-check\">\n                <label htmlFor=\"\">Set Reminder</label>\n                <input type=\"checkbox\" checked={reminder} value={reminder} onChange={(e) => setReminder(e.currentTarget.checked)} />\n            </div>\n            <input type=\"submit\" value=\"Save Task\" className=\"btn btn-block\"/>\n        </form>\n    )\n}\n\nexport default AddTask\n","import { useState, useEffect } from \"react\" \nimport { BrowserRouter as Router, Route } from \"react-router-dom\" \nimport Footer from \"./components/Footer\";\nimport About from \"./components/About\";\nimport Header from \"./components/Header\";\nimport Tasks from \"./components/Tasks\";\nimport AddTask from \"./components/AddTask\"\n\nconst App = () => {\n  const [showAddTask, setShowAddTask] = useState(false)\n  const [tasks, setTasks] = useState([])\n\n  useEffect(() => {\n    const getTasks = async () => {\n      const tasksFromServer = await fetchTasks()\n      setTasks(tasksFromServer )\n    }\n\n    getTasks()\n  }, [])\n\n// Fetch Tasks\n  const fetchTasks = async () => {\n    const res = await fetch(\"http://localhost:5000/tasks\")\n    const data = await res.json()\n\n    return data\n  }\n\n  // Fetch Task\n  const fetchTask = async (id) => {\n    const res = await fetch(`http://localhost:5000/tasks/${id}`)\n    const data = await res.json()\n\n    return data\n  }\n\n// Add Task\n  const addTask = async (task) => {\n    const res = await fetch(\"http://localhost:5000/tasks\", {\n      method: \"POST\",\n      headers: {\n        \"Content-type\": \"application/json\"\n      },\n      body: JSON.stringify(task)\n    })\n\n    const data = await res.json()\n\n    setTasks([...tasks, data])\n    \n  }\n\n// const addTask = (task) => {\n//   const id = Math.floor(Math.random() * 10000 + 1)\n//   const newTask = { id, ...task }\n//   setTasks([...tasks, newTask])\n// }\n\n// Delete a task\nconst deleteTask = async (id) => {\n  await fetch(`http://localhost:5000/tasks/${id}`, {\n    method: \"DELETE\",\n  })\n\n  setTasks(tasks.filter((task) => task.id !== id))\n}\n\n// Toggle Reminder\nconst toggleReminder = async (id) => {\n  const taskToToggle = await fetchTask(id)\n  const updTask = { ...taskToToggle, reminder: !taskToToggle.reminder }\n\n  const res = await fetch(`http://localhost:5000/tasks/${id}`, {\n    method: \"PUT\",\n    headers: {\n      \"Content-type\": \"application/json\"\n    },\n    body: JSON.stringify(updTask)\n  })\n\n  const data = await res.json()\n\n  setTasks(tasks.map((task) => task.id === id ? { ...task, reminder: data.reminder } : task))\n}\n\n  return (\n    <Router>\n    <div className=\"container\">\n      <Header onAdd={() => setShowAddTask(!showAddTask)} showAdd={showAddTask} />\n      <Route path=\"/\" exact render={(props) => (\n        <>\n          {showAddTask && <AddTask onAdd={addTask} />}\n          {tasks.length > 0 ? (<Tasks tasks={tasks} onDelete={deleteTask} onToggle={toggleReminder} />) : (\"No Tasks To Show\")}\n        </>\n      )}/>\n      <Route path=\"/about\" component={About} />\n      <Footer />\n    </div>\n    </Router>\n  )\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}